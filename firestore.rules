rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    /* =================================================================== *
     *                                HELPERS                              *
     * =================================================================== */

    // Est-ce que l'utilisateur est connect√© ?
    function isLoggedIn() {
      return request.auth != null;
    }

    // Document users/{uid} comme source de v√©rit√© pour role/companyId/agencyId
    function userDoc() {
      return isLoggedIn()
        ? get(/databases/$(database)/documents/users/$(request.auth.uid)).data
        : null;
    }

    // Admin de PLATEFORME (via users.role OU via custom claims)
    function isPlatformAdmin() {
      return isLoggedIn() && (
        userDoc().role == "admin_platforme" ||
        request.auth.token.role == "admin_platforme" ||
        request.auth.token.admin == true
      );
    }

    // Admin d'une COMPAGNIE donn√©e (via users OU via custom claims)
    function isCompanyAdmin(companyId) {
      return isLoggedIn() && (
        (userDoc().role == "admin_compagnie" && userDoc().companyId == companyId) ||
        (request.auth.token.role == "admin_compagnie" && request.auth.token.companyId == companyId)
      );
    }

    // Membre d'une AGENCE (r√¥les op√©rationnels)
    function isAgencyStaff(companyId, agencyId) {
      return isLoggedIn() &&
             userDoc().companyId == companyId &&
             userDoc().agencyId == agencyId &&
             (userDoc().role in ["chefAgence","guichetier","comptable","superviseur"]);
    }

    // La COMPAGNIE a sa page publique/vitrine activ√©e ?
    function isPublicCompany(companyId) {
      // üëâ Devient FAUX uniquement si le champ est explicitement √† false.
      //    Si le champ est absent ou true ‚Üí c‚Äôest public.
      return !(get(/databases/$(database)/documents/companies/$(companyId)).data.publicPageEnabled == false);
    }


    /* =================================================================== *
     *                               USERS                                 *
     * =================================================================== */

    // Chaque utilisateur lit/√©crit son propre doc. Plateforme lit/√©crit tout.
    match /users/{uid} {
      allow read:  if isLoggedIn() && (request.auth.uid == uid || isPlatformAdmin());
      allow write: if isLoggedIn() && (request.auth.uid == uid || isPlatformAdmin());
    }


    /* =================================================================== *
     *                               PUBLIC                                *
     * =================================================================== */

    // Ressources r√©ellement publiques (ex: liste de villes pour autocompl√©tion)
    match /villes/{doc=**} {
      allow read: if true;
      // allow write: if isPlatformAdmin();
    }


    /* =================================================================== *
     *                            R√âSERVATIONS                              *
     * =================================================================== */

    // Sch√©ma top-level (legacy)
    match /reservations/{id} {
      allow create: if true; // cr√©ation ouverte (r√©servation en ligne)
      allow read, write: if isPlatformAdmin();
    }

    // R√©servations sous une compagnie (legacy si utilis√©)
    match /companies/{companyId}/reservations/{resId} {
      allow read, write: if isPlatformAdmin() || isCompanyAdmin(companyId);
    }


    /* =================================================================== *
     *                          COMPANIES (ARBRE)                          *
     * =================================================================== */

    match /companies/{companyId} {

        /* ---------- Doc racine compagnie ---------- */
  // üîì Public sauf si explicitement d√©sactiv√© (publicPageEnabled == false)
  // (aucune d√©pendance √† get() ‚Üí plus de boucle, la liste s'affiche)
  allow read: if !(resource.data.publicPageEnabled == false)
              || isPlatformAdmin()
              || isCompanyAdmin(companyId);

      /* ---------- OUVERTURE TOTALE EN LECTURE POUR LA VITRINE ----------- */
      // Si la compagnie a publicPageEnabled == true, tout son contenu
      // (branding, pages, theme, footer, etc.) est lisible publiquement.
      match /{allSubCollections=**} {
        allow read: if isPublicCompany(companyId);
        // aucune √©criture publique
      }

      // √âcritures r√©serv√©es aux admins (plateforme/compagnie)
      allow write: if isPlatformAdmin() || isCompanyAdmin(companyId);

      /* ---------- LECTURE PUBLIQUE GLOBALE POUR VITRINE ----------------- */
      // Si la compagnie a la vitrine activ√©e, TOUT son sous-arbre est lisible
      // en lecture seule (pages, branding, sections, etc.). Les √©critures
      // restent limit√©es aux admins via les autres r√®gles.
      match /{any=**} {
        allow read: if isPublicCompany(companyId);
        // ne donne AUCUNE √©criture ; les autres r√®gles g√®rent d√©j√† les writes
      }

      /* ---------- Agences (m√©tadonn√©es) ---------- */
      match /agences/{agencyId} {
        // Lecture publique si la compagnie est publique ET l‚Äôagence est visible/active.
        allow read: if isPlatformAdmin()
                    || isCompanyAdmin(companyId)
                    || (isPublicCompany(companyId) &&
                        (resource.data.agencyPublic == true || resource.data.status == "actif"));
        // √âcritures : admins uniquement
        allow write: if isPlatformAdmin() || isCompanyAdmin(companyId);
      }

      /* ---------- Horaires publics pour recherche ---------- */
      match /agences/{agencyId}/weeklyTrips/{tripId} {
        // Lecture publique si vitrine activ√©e
        allow read: if isPlatformAdmin()
                    || isCompanyAdmin(companyId)
                    || isPublicCompany(companyId);
        // √âcritures : admins uniquement
        allow write: if isPlatformAdmin() || isCompanyAdmin(companyId);
      }

      /* ---------- R√©servations imbriqu√©es (structure actuelle) ---------- */
      match /agences/{agencyId}/reservations/{resId} {
        // Lecture : plateforme / admin compagnie / staff agence / propri√©taire
        allow read: if isPlatformAdmin()
                    || isCompanyAdmin(companyId)
                    || isAgencyStaff(companyId, agencyId)
                    || (isLoggedIn() && resource.data.userId == request.auth.uid);
        // Cr√©ation ouverte : r√©servation en ligne
        allow create: if true;
        // MAJ/Suppression : plateforme / admin compagnie / staff
        allow update, delete: if isPlatformAdmin()
                               || isCompanyAdmin(companyId)
                               || isAgencyStaff(companyId, agencyId);
      }

      /* ---------- Avis sous-collection compagnie ---------- */
      match /avis/{avisId} {
        // Lecture publique si published/visible ; admins toujours ok
        allow read: if isPlatformAdmin() || isCompanyAdmin(companyId)
                    || resource.data.published == true
                    || resource.data.visible == true;
        // √âcritures : admins
        allow create, update, delete: if isPlatformAdmin() || isCompanyAdmin(companyId);
      }

      /* ---------- Moyens de paiement affichables ---------- */
      match /paymentMethods/{pmId} {
        // Lecture publique si vitrine activ√©e + flag isPublic
        allow read: if isPlatformAdmin()
                    || isCompanyAdmin(companyId)
                    || (isPublicCompany(companyId) && resource.data.isPublic == true);
        // √âcritures : admins
        allow write: if isPlatformAdmin() || isCompanyAdmin(companyId);
      }

      /* ---------- Suggestions / messages visiteurs ---------- */
      match /suggestions/{suggId} {
        // Lecture publique si vitrine activ√©e
        allow read: if isPlatformAdmin()
                    || isCompanyAdmin(companyId)
                    || isPublicCompany(companyId);
        // Cr√©ation ouverte au public si vitrine activ√©e
        allow create: if isPublicCompany(companyId);
        // MAJ / suppression : admins
        allow update, delete: if isPlatformAdmin() || isCompanyAdmin(companyId);
      }

      /* ---------- Whitelist "vitrine" sans flag public (syntaxe valide) -- */
      // Autorise la lecture de certaines sous-collections de config vitrine
      // quand la compagnie est publique.
      match /{cfg}/{docId} {
        allow read: if isPublicCompany(companyId) &&
                     (cfg in ["homeConfig","public","sections","seo","theme","branding","publicSettings","pages","footer","header"]);
        allow write: if isPlatformAdmin() || isCompanyAdmin(companyId);
      }

      /* ---------- Fallback 1 niveau : lecture si flag public ------------- */
      match /{anySubCol}/{anyDoc} {
        allow read: if isPublicCompany(companyId) &&
                     (resource.data.isPublic == true || resource.data.visible == true);
        allow write: if isPlatformAdmin() || isCompanyAdmin(companyId);
      }

      /* ---------- Fallback profond : lecture si flag public -------------- */
      match /{anySubCol}/{anyDoc}/{deep=**} {
        allow read: if isPublicCompany(companyId) &&
                     (resource.data.isPublic == true || resource.data.visible == true);
        allow write: if isPlatformAdmin() || isCompanyAdmin(companyId);
      }

      /* ---------- Catch-all du SOUS-ARBRE companies/* -------------------- */
      match /{sub=**} {
        allow read, write: if isPlatformAdmin() || isCompanyAdmin(companyId);
      }
    }


    /* =================================================================== *
     *                              IMAGES                                 *
     * =================================================================== */

    // Sch√©ma sous-compagnie
    match /companies/{companyId}/imagesBibliotheque/{imgId} {
      allow read, write: if isPlatformAdmin() || isCompanyAdmin(companyId);
    }

    // Sch√©ma top-level avec champ companyId (utilis√© par s√©lecteurs & vitrine)
    match /imagesBibliotheque/{imgId} {
      // Lecture : plateforme OU
      //           public si la compagnie est publique et que l'image lui appartient OU
      //           utilisateur connect√© de la m√™me compagnie.
      allow read: if isPlatformAdmin()
                  || (isPublicCompany(resource.data.companyId) &&
                      resource.data.companyId != null)
                  || (isLoggedIn() && resource.data.companyId == userDoc().companyId);

      // Cr√©ation : plateforme OU utilisateur connect√© √©crivant pour SA compagnie
      allow create: if isPlatformAdmin()
                    || (isLoggedIn()
                        && request.resource.data.companyId == userDoc().companyId);

      // MAJ/Suppression : plateforme OU m√™me compagnie (connect√©)
      allow update, delete: if isPlatformAdmin()
                            || (isLoggedIn()
                                && resource.data.companyId == userDoc().companyId);
    }

    // M√©dias globaux de plateforme (assets de vitrine)
    match /mediaPlatform/{doc=**} {
      // Lecture publique si isPublic==true. Connect√©s/admins lisent aussi.
      allow read:  if resource.data.isPublic == true
                   || isLoggedIn()
                   || isPlatformAdmin();
      allow write: if isPlatformAdmin();
    }

    /* =================================================================== *
     *                            AVIS CLIENTS                              *
     * =================================================================== */

    match /avis/{avisId} {
      allow read: if isPlatformAdmin()
                  || (isLoggedIn() && resource.data.companyId == userDoc().companyId)
                  || (resource.data.visible == true)
                  || (resource.data.published == true);
      allow create: if isPlatformAdmin()
                    || (isLoggedIn()
                        && request.resource.data.companyId == userDoc().companyId);
      allow update, delete: if isPlatformAdmin()
                            || (isLoggedIn()
                                && resource.data.companyId == userDoc().companyId);
    }


    /* =================================================================== *
     *                                PLANS                                *
     * =================================================================== */

    match /plans/{planId} {
      // Ouvre la lecture publique UNIQUEMENT si le plan est marqu√© public
      allow read:  if resource.data.isPublic == true
                   || isLoggedIn()
                   || isPlatformAdmin();
      allow write: if isPlatformAdmin();
    }


    /* =================================================================== *
     *                        PARAM√àTRES / STATS (VAR)                     *
     * =================================================================== */

    match /platform/{doc=**} {
      allow read: if true;
      allow write: if isPlatformAdmin();
    }

    match /stats/{doc=**} {
      allow read, write: if isPlatformAdmin();
    }

    match /statistics/{doc=**} {
      allow read, write: if isPlatformAdmin();
    }


    /* =================================================================== *
     *            BLOC G√âN√âRIQUE top-level √† champ companyId               *
     * =================================================================== */

    match /{topLevel}/{docId} {
      // Cr√©ation : plateforme OU utilisateur connect√© √©crivant pour SA compagnie
      allow create: if isPlatformAdmin()
                    || (isLoggedIn()
                        && request.resource.data.companyId != null
                        && request.resource.data.companyId == userDoc().companyId);

      // Lecture/MAJ/Suppression : plateforme OU propri√©taire (m√™me companyId)
      allow read, update, delete: if isPlatformAdmin()
                                  || (isLoggedIn()
                                      && resource.data.companyId != null
                                      && resource.data.companyId == userDoc().companyId);
    }


    /* =================================================================== *
     *                   FIX PAGE PUBLIQUE (rappels explicites)            *
     * =================================================================== */

    match /companies/{companyId}/agences/{agencyId} {
      // üëâ vitrine ouverte = agences lisibles sans autres drapeaux
      allow read: if isPlatformAdmin()
                  || isCompanyAdmin(companyId)
                  || isPublicCompany(companyId);
    }

    match /companies/{companyId}/agences/{agencyId}/weeklyTrips/{tripId} {
      allow read: if isPlatformAdmin() || isCompanyAdmin(companyId) || isPublicCompany(companyId);
    }

    match /companies/{companyId}/suggestions/{suggId} {
      allow read, create: if isPlatformAdmin() || isCompanyAdmin(companyId) || isPublicCompany(companyId);
    }


    /* =================================================================== *
     *                           CATCH-ALL (DENY)                          *
     * =================================================================== */

    match /{document=**} {
      allow read, write: if false;
    }
  }
}
