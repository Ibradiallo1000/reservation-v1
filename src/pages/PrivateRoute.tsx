import React from 'react';
import { Navigate } from 'react-router-dom';
import { useAuth } from '@/contexts/AuthContext';
import type { Role } from '../roles-permissions';

interface PrivateRouteProps {
  children: React.ReactNode;
  allowedRoles: Role[];
}

const PrivateRoute: React.FC<PrivateRouteProps> = ({ children, allowedRoles }) => {
  const { user, loading } = useAuth();

  if (loading) {
    return <div className="p-6 text-gray-600">Chargement en cours...</div>;
  }

  // Utilisateur non connect√©
  if (!user) {
    console.warn('üîí Aucun utilisateur connect√©. Redirection vers /login');
    return <Navigate to="/login" replace />;
  }

  // R√¥le non autoris√©
  if (!allowedRoles.includes(user.role as Role)) {
    console.warn(
      `‚õî Acc√®s refus√© : r√¥le actuel = "${user.role}" | r√¥les requis = ${JSON.stringify(allowedRoles)}`
    );

    // OPTION 1 : Rediriger vers la Home
    return <Navigate to="/" replace />;

    // OPTION 2 : Afficher un message explicite (d√©commente ceci si tu pr√©f√®res)
    // return (
    //   <div className="p-6 text-red-600">
    //     ‚õî Acc√®s refus√© √† cette page.<br />
    //     Votre r√¥le : <strong>{user.role}</strong><br />
    //     Acc√®s requis : <strong>{allowedRoles.join(', ')}</strong>
    //   </div>
    // );
  }

  // ‚úÖ Acc√®s autoris√©
  console.log(`‚úÖ Acc√®s autoris√© pour ${user.email} ‚Äì r√¥le : ${user.role}`);
  return <>{children}</>;
};

export default PrivateRoute;
